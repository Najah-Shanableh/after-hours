# jdblischak at gmail dot com
############################################################
rm(list = ls())
library(ggplot2)
data(mpg)
# Motivation:
# Graphics are important not only to concisely convey the
# results of an analysis, but also as diagnostic tools to
# inform the statistical analyses being performed. ggplot2
# is an R package that allows you to create high-quality,
# informative graphics in a flexible, intuitive fashion.
# Resources:
# Documentation - http://docs.ggplot2.org/current/
# Academic paper - http://vita.had.co.nz/papers/layered-grammar.pdf
ggplot() +
layer(data = mpg,
mapping = aes(x = cty, y = hwy,
shape = factor(drv)),
geom = 'point',
stat = 'identity',
position = 'identity') +
facet_grid(. ~ year) + theme_bw() +
labs(title = 'Comparing fuel economy in the city versus the highway\nfor cars with different drive trains',
x = 'Fuel economy in the city (mpg)',
y = 'Fuel economy on the highway (mpg)')
ggplot() +
layer(data = mpg,
mapping = aes(x = cty, fill = factor(drv)),
geom = 'bar',
stat = 'bin',
position = 'stack') +
facet_grid(year ~ .) +
labs(title = 'Distribution of fuel economy for city driving for cars with different drive trains',
x = 'Fuel economy in the city (mpg)',
y = 'Number of cars')
base2 + geom_histogram() + facet_grid(cyl ~ year) +
ggtitle("Histogram of fuel economy for city driving by
\n number of cylinders (rows) and by year (columns)") +  labs(title = 'Comparing fuel economy in the city versus the highway\nfor cars with different drive trains',
x = 'Fuel economy in the city (mpg)',
y = 'Fuel economy on the highway (mpg)')
base2 <- ggplot(data = mpg,
mapping = aes(x = cty, fill = factor(drv)))
str(base2)
base2 + geom_histogram() + facet_grid(cyl ~ year) +
ggtitle("Histogram of fuel economy for city driving by
\n number of cylinders (rows) and by year (columns)") +  labs(title = 'Comparing fuel economy in the city versus the highway\nfor cars with different drive trains',
x = 'Fuel economy in the city (mpg)',
y = 'Fuel economy on the highway (mpg)')
base1 <- ggplot(data = mpg,
mapping = aes(x = cty, y = hwy,
color = factor(drv)))
base1 + geom_point()
base1 + geom_point() +  labs(title = "Fuel economy for highway driving vs \n
city driving for cars with different drive trains",
x = 'Fuel economy in the city (mpg)',
y = 'Fuel economy on the highway (mpg)')
base2 + geom_histogram() + facet_grid(cyl ~ year) +
labs(title = "Histogram of fuel economy for city driving by
\n number of cylinders (rows) and by year (columns)",
x = 'Year',
y = 'Fuel economy on the highway (mpg)')
base2 + geom_histogram() + facet_grid(cyl ~ year) +
labs(title = "Histogram of fuel economy for city driving by
\n number of cylinders (rows) and by year (columns)",
x = 'Year',
y = 'Number of Cylinders')
base2 + geom_histogram() + facet_grid(cyl ~ year) +
labs(title = "Histogram of fuel economy for city driving by
\n number of cylinders (rows) and by year (columns) for different drive trains",
x = 'Year',
y = 'Number of Cylinders')
base2 + geom_histogram() + facet_grid(cyl ~ year) +
labs(title = "Histogram of fuel economy for city driving by
\n number of cylinders (rows) and by year (columns) \n for different drive trains",
x = 'Year',
y = 'Number of Cylinders')
base2 + geom_histogram() + facet_grid(cyl ~ year) +
labs(title = "\n Histogram of fuel economy for city driving by
\n number of cylinders (rows) and by year (columns) \n for different drive trains",
x = 'Year',
y = 'Number of Cylinders')
base2 + geom_histogram() + facet_grid(cyl ~ year) +
labs(title = "Histogram of fuel economy for city driving by \n number of cylinders (rows) and by year (columns) \n for different drive trains",
x = 'Year',
y = 'Number of Cylinders')
base1 + geom_point() +  labs(title = "Fuel economy for highway driving vs \n city driving for cars with different drive trains",
x = 'Fuel economy in the city (mpg)',
y = 'Fuel economy on the highway (mpg)')
base1 + geom_point()
base1 + geom_point() +  labs(title = "Fuel economy for highway driving vs \n city driving for cars with different drive trains",
x = 'Fuel economy in the city (mpg)',
y = 'Fuel economy on the highway (mpg)')
base1 + geom_point() +  labs(title = "Fuel economy for highway driving vs \n city driving for cars with different drive trains",
x = 'Fuel economy in the city (mpg)',
y = 'Fuel economy on the highway (mpg)') + scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"),
name="Drive Train",
breaks=c("4", "f", "r"),
labels=c("All Wheel", "Front Wheel", "Rear Wheel"))
b <- base1 + geom_point() +  labs(title = "Fuel economy for highway driving vs \n city driving for cars with different drive trains",
x = 'Fuel economy in the city (mpg)',
y = 'Fuel economy on the highway (mpg)')
b + + scale_shape_discrete(
name="Drive Train",
breaks=c("4", "f", "r"),
labels=c("All Wheel", "Front Wheel", "Rear Wheel"))
b + scale_shape_discrete(
name="Drive Train",
breaks=c("4", "f", "r"),
labels=c("All Wheel", "Front Wheel", "Rear Wheel"))
b + scale_colour_discrete(
name="Drive Train",
breaks=c("4", "f", "r"),
labels=c("All Wheel", "Front Wheel", "Rear Wheel"))
base2 + geom_histogram() + facet_grid(cyl ~ year) +
labs(title = "Histogram of fuel economy for city driving by \n number of cylinders (rows) and by year (columns) \n for different drive trains",
x = 'Year',
y = 'Number of Cylinders') + scale_colour_discrete(
name="Drive Train",
breaks=c("4", "f", "r"),
labels=c("All Wheel", "Front Wheel", "Rear Wheel"))
b2 <- base2 + geom_histogram() + facet_grid(cyl ~ year) +
labs(title = "Histogram of fuel economy for city driving by \n number of cylinders (rows) and by year (columns) \n for different drive trains",
x = 'Year',
y = 'Number of Cylinders')
b2 + scale_colour_discrete(
name="Drive Train",
breaks=c("4", "f", "r"),
labels=c("All Wheel", "Front Wheel", "Rear Wheel"))
b2 + scale_shape_discrete(
name="Drive Train",
breaks=c("4", "f", "r"),
labels=c("All Wheel", "Front Wheel", "Rear Wheel"))
b2 + scale_fill_discrete(
name="Drive Train",
breaks=c("4", "f", "r"),
labels=c("All Wheel", "Front Wheel", "Rear Wheel"))
b2 <- base2 + geom_histogram() + facet_grid(cyl ~ year) +
labs(title = "Histogram of fuel economy for city driving by \n number of cylinders (rows) and by year (columns) \n for different drive trains",
x = 'Fuel economy in the city (mpg)',
y = 'Number of Cylinders')
b2 + scale_fill_discrete(
name="Drive Train",
breaks=c("4", "f", "r"),
labels=c("All Wheel", "Front Wheel", "Rear Wheel"))
b2 <- base2 + geom_histogram() + facet_grid(cyl ~ year) +
labs(title = "Histogram of fuel economy for city driving by \n number of cylinders (rows) and by year (columns) \n for different drive trains",
x = 'Fuel economy in the city (mpg) [by year]',
y = 'Count [by number of cylinders]')
b2 + scale_fill_discrete(
name="Drive Train",
breaks=c("4", "f", "r"),
labels=c("All Wheel", "Front Wheel", "Rear Wheel"))
# Scales
summary(cty)
summary(mpg$cty)
(35-9)/30
nrow(mpg[mpg$drv == '4' & mpg$year == 2008 & mpg$cyl == 8 & mpg$cty <10,])
b2 <- base2 + geom_histogram() + facet_grid(cyl ~ year) +
labs(title = "Histogram of fuel economy for city driving by \n number of cylinders (rows) and by year (columns) \n for different drive trains",
x = 'Fuel economy in the city (mpg) [by year]',
y = 'Car Count [by number of cylinders]')
b2 + scale_fill_discrete(
name="Drive Train",
breaks=c("4", "f", "r"),
labels=c("All Wheel", "Front Wheel", "Rear Wheel"))
b2 <- base2 + geom_histogram() + facet_grid(cyl ~ year) +
labs(title = "Histogram of fuel economy for city driving by \n number of cylinders (rows) and by year (columns) \n for different drive trains",
x = 'Fuel economy in the city (mpg) [by year]',
y = 'Car Frequency [by number of cylinders]')
b2 + scale_fill_discrete(
name="Drive Train",
breaks=c("4", "f", "r"),
labels=c("All Wheel", "Front Wheel", "Rear Wheel"))
b2 <- base2 + geom_histogram() + facet_grid(cyl ~ year) +
labs(title = "Histogram of fuel economy for city driving by \n number of cylinders (rows) and by year (columns) \n for different drive trains",
x = 'Fuel economy in the city (mpg)',
y = 'Car Frequency')
b2 + scale_fill_discrete(
name="Drive Train",
breaks=c("4", "f", "r"),
labels=c("All Wheel", "Front Wheel", "Rear Wheel"))
b2 <- base2 + geom_histogram() + facet_grid(cyl ~ year) +
labs(title = "Histogram of fuel economy for city driving by \n number of cylinders (rows) and by year (columns) \n for different drive trains",
x = 'Fuel economy in the city (mpg)',
y = 'Car Frequency')
b2 + scale_fill_continuous(
name="Drive Train",
breaks=c("4", "f", "r"),
labels=c("All Wheel", "Front Wheel", "Rear Wheel"))
b2 <- base2 + geom_histogram() + facet_grid(cyl ~ year) +
labs(title = "Histogram of fuel economy for city driving by \n number of cylinders (rows) and by year (columns) \n for different drive trains",
x = 'Fuel economy in the city (mpg)',
y = 'Car Frequency')
b2 + scale_fill_discrete(
name="Drive Train",
breaks=c("4", "f", "r"),
labels=c("All Wheel", "Front Wheel", "Rear Wheel"))
comment <- function(...){}
comment("
# 1. Dosage in treatment
# 2. Generate multiple treatment sites
# -- Pause for sketching exhibits (Excel, powerpoint, and ggplot2)
# 3. Geocoding (XY draws, sampling from real student/school locations... maybe HS clients and providers, then jittered?)
# 4. School attendance outcome (modeled as negative binomial; see http://www.ats.ucla.edu/stat/r/dae/nbreg.htm )
")
X <- matrix(nrow = 2, ncol = 2)
X
nKids     <- 24268 # To make the sample equivalent to a year of HS enrollment in CPS
nSchools  <- 106
sTrtName <- "Learn Good! Enrollment"
# Set skeleton for the data draws
sDataFeatures <- c("PretestDraw", "StudFactor", "TreatmentDraw" , "BpiDraw", "RaceDraw", "SchDraw", "GenderDraw", "FrlDraw") #
nDataFeatures <- length(sDataFeatures)
# Generate a variance-Covariance matrix for all data features. These features will be transformed below into new distributions and magnitudes.
mVCV <- matrix(nrow = nDataFeatures, ncol = nDataFeatures, dimnames = list(sDataFeatures, sDataFeatures))
for (i in 1:nDataFeatures) {
for (j in 1:i) {
if (i == j) mVCV[i, j] <- 1 else {
rho <- max(min(rnorm(1, sd = 0.2), 1), -1) # This will result in correlations generally close to 0, and truncated within [0,1]
mVCV[i,j] <- rho
mVCV[j,i] <- rho # These assignments ensure that the variance covariance matrix is symmetric
}
}
}
mVCV
NudgeVCV <- function(x1, x2, mult=NULL, newval=NULL) {
# Note: the "<<-" assignment operator ensures that the assignment is applied to mVCV in the global environment (i.e. that the change persists after the function is run)
mVCV[x1, x2] <<- ifelse(is.null(newval), as.numeric(mult*abs(mVCV[x1, x2])), newval)
mVCV[x2, x1] <<- ifelse(is.null(newval), as.numeric(mult*abs(mVCV[x1, x2])), newval)
}
NudgeVCV("TreatmentDraw", "PretestDraw",   mult = -1)
mVCV
NudgeVCV("PretestDraw",   "BpiDraw",       mult = -1)
NudgeVCV("PretestDraw",   "RaceDraw",      mult = +1)
NudgeVCV("RaceDraw",      "StudFactor",    newval = +0.15)
NudgeVCV("RaceDraw",      "BpiDraw",       newval = -0.20)
NudgeVCV("RaceDraw",      "SchDraw",       newval = +0.45)
# The randomly draw correlation is so low that it's worth just reassigning, rather than multiplying by a huge number
mVCV
vMu = as.vector(rep(0, nDataFeatures))
vMU
vMu
KidData <- mvrnorm(n = nKids, mu = vMu, Sigma = mVCV)
library("MASS")
vMu
KidData <- mvrnorm(n = nKids, mu = vMu, Sigma = mVCV)
library(MASS)
View(KidData)
mean(KidData[,1])
colMeans(KidData)
apply(KidData,2,FUN=mean)
StudId <- 1:nKids
dfKidData <- data.frame(StudId, KidData)
View(dfKidData)
View(dfKidData)
pnorm(0)
# Create Gender
bGender <- as.numeric(pnorm(dfKidData$GenderDraw) <= 0.51) # Without the "as.numeric()" function, bGender would be a series of
fix(bGender)
cGender <- ifelse(1==bGender, "Treble", "Bass")  # Convert the gender distinction into an abstract one
fix(cGender)
table(cGender)
cRaceDraw <- cut(pnorm(dfKidData$RaceDraw), breaks = c(0.0, 0.4, 0.5, 0.6, 1.0), include.lowest = TRUE)
cRace <- factor(cRaceDraw, labels = c("Sour", "Salty", "Bitter", "Sweet"))
table(cRaceDraw,dfKidData$RaceDraw)
table(cRace,dfKidData$RaceDraw)
table(cRace,cRaceDraw)
# Create Free/Reduced Price Lunch
bFrl <- as.numeric(pnorm(dfKidData$FrlDraw) <= 0.87)
Pretest <- round(dfKidData$PretestDraw*20 + 100)
hist(PretestScaled)
hist(Pretest)
# Rescale Bpi
Bpi <- round(exp(dfKidData$BpiDraw/1.5 + 2)/3)  # NSM: this is messing with things to get something relatively flat, with an interesting tail
hist(Bpi, breaks = 0:ceiling(max(Bpi)))
rnorm(3)
bTreated <- as.numeric(-1.0 + (-0.01)*Pretest + (0.1)*Bpi + ifelse(cRace=="Sour", 0.5, 0.0) +
ifelse(cRace=="Salty", 0.25, 0.0) + rnorm(nKids) > 0)
mean(bTreated)
fix(bTreated)
schools <- read.table("~/Desktop/schools.csv", header=T, quote="\"")
View(schools)
View(schools)
# Construct names for schools (comes from http://www.fanfiction.net/s/7739576/1/106-Stories-of-Us)
sSchNamesData <- schools
SchTypeDraw <- cut(runif(nSchools), breaks = c(0.0, 0.3, 0.5, 0.7, 0.8, 0.9, 1.0), include.lowest = TRUE)
I think we should all secretly get wolf shirts and wear them on the same day
fix(SchTypeDraw)
fix(SchTypeDraw)
# sSchNamesData <- read.csv2(file = paste(MyDir, "Raw Data/Random Words for School Names.csv", sep=""), sep = ",", header = TRUE)
SchTypeDraw <- cut(runif(nSchools), breaks = c(0.0, 0.3, 0.5, 0.7, 0.8, 0.9, 1.0), include.lowest = FALSE)
fix(SchTypeDraw)
SchTypeDraw <- cut(runif(nSchools), breaks = c(0.0, 0.3, 0.5, 0.7, 0.8, 0.9, 1.0), include.lowest = TRUE)
sSchType <- as.character(factor(SchTypeDraw, labels = c("Academy", "School", "High School", "Preparatory", "Charter", "International")))
fix(sSchType)
sSchName <- paste(sSchNamesData$SchNamesList, sSchType)
fix(sSchName)
cSchYinYang <- factor(runif(nSchools)<.2, labels = c("Yin", "Yang"))
table(cSchYinYang)
x <- runif(5)
y <- x < .2
x
y
factor(y, labels = c("Yin", "Yang"))
x=c(x, .1)
y
y <- x < .2
y
factor(y, labels = c("Yin", "Yang"))
(1:nSchools*5)/nSchools
(1:nSchools*5)
dSchEffect <- ((1:nSchools*5)/nSchools + rnorm(nSchools, sd = sqrt(5)) + ifelse(cSchYinYang=="Yin",0,4))
fix(dSchEffect)
dfSchData <- data.frame(1:nSchools, sSchName, dSchEffect, as.character(cSchYinYang))
colnames(dfSchData) <- c("SchNum", "SchName", "SchEffect", "SchType")
SchAssignmentDraws <- cumsum((runif(nSchools)+1.0)/3)
summary(SchAssignmentDraws)
SchAssignmentDraws
SchAssignmentCuts <- SchAssignmentDraws/max(SchAssignmentDraws)
SchAssignmentDraws
SchAssignmentCuts
View(dfKidData)
AssignedSchNum <- cut(pnorm(dfKidData$SchDraw), c(0,SchAssignmentCuts), labels=1:nSchools)
dfKidData <- data.frame(KidData, cGender, cRace, Pretest, bTreated, Bpi, AssignedSchNum)
dfMyData <- merge(x = dfKidData, y = dfSchData, by.x = "AssignedSchNum", by.y = "SchNum")
rm(AssignedSchNum, Bpi, cGender, cRace, Pretest, bTreated)
attach(dfMyData)
aggregate(x = cbind(SchEffect, RaceDraw), by = list(cRace),    FUN = "mean")
"Dist to" %$% sTrNames
"Dist to" %&% sTrNames
load("~/Downloads/ALL THE DATA - Sheet1.csv")
load("~/Downloads/all_the_data.csv")
load("~/Downloads/all_the_data.tsv")
load("~/Downloads/all_the_data.csv")
load("~/Downloads/all_the_data.csv")
load("~/Desktop/Workbook1.csv")
load("~/Desktop/Workbook1.txt")
read.csv("~/Desktop/Workbook1.csv")
dssg <- read.csv("~/Desktop/Workbook1.csv")
View(dssg)
table(dssg$fict_or_non)
dssg$fict_or_non[dssg$fict_or_non == "grouch",] <-  "refused to answer"
icebreaker <- read.csv("~/icebreaker/icebreaker.txt")
View(icebreaker)
icebreaker <- read.csv("~/icebreaker/icebreaker.txt")
View(icebreaker)
icebreaker <- read.csv("~/icebreaker/icebreaker.txt")
base <- ggplot(data = icebreaker,
mapping = aes(x = fiction, fill = factor(fiction)))
base2 + geom_histogram()
library(ggplot2)
base <- ggplot(data = icebreaker,
mapping = aes(x = fiction, fill = factor(fiction)))
base + geom_histogram()
icebreaker[,icebreaker$fiction=="grouch"] <- "refused to answer"
icebreaker[icebreaker$fiction=="grouch",] <- "refused to answer"
icebreaker$fiction[icebreaker$fiction=="grouch",] <- "refused to answer"
icebreaker <- read.csv("~/icebreaker/icebreaker.txt")
base <- ggplot(data = icebreaker,
mapping = aes(x = fiction, fill = factor(fiction)))
base + geom_histogram()
b2 <- base2 + geom_histogram() +
labs(title = "Histogram answering the question "When you go to a bookstore, which section do you gravitate towards?",
x = 'Section Type',
y = 'Count')
b2 <- base2 + geom_histogram() +
labs(title = "Histogram answering the question "When you go to a bookstore, which section do you gravitate towards?"",
x = 'Section Type',
y = 'Count')
b2 <- base2 + geom_histogram() +
labs(title = 'Histogram answering the question "When you go to a bookstore, which section do you gravitate towards?"',
x = 'Section Type',
y = 'Count')
b2
base + geom_histogram() +
labs(title = 'Histogram answering the question "When you go to a bookstore, \n which section do you gravitate towards?"',
x = 'Section Type',
y = 'Count')
base + geom_histogram() +
labs(title = 'Histogram answering the question \n "When you go to a bookstore, \n which section do you gravitate towards?"',
x = 'Section Type',
y = 'Count')
base <- ggplot(data = icebreaker,
mapping = aes(x = fiction, y = ..density.., fill = factor(fiction)))
base + geom_histogram() +
labs(title = 'Histogram answering the question \n "When you go to a bookstore, \n which section do you gravitate towards?"',
x = 'Section Type',
y = 'Count')
base <- ggplot(data = icebreaker,
mapping = aes(x = fiction, fill = factor(fiction)))
base + geom_histogram()
base + geom_histogram() +
labs(title = 'Histogram answering the question \n "When you go to a bookstore, \n which section do you gravitate towards?"',
x = 'Section Type',
y = 'Count')
base + geom_histogram(aes(y=..density..)) +
labs(title = 'Histogram answering the question \n "When you go to a bookstore, \n which section do you gravitate towards?"',
x = 'Section Type',
y = 'Count')
base + geom_histogram() +
labs(title = 'Histogram answering the question \n "When you go to a bookstore, \n which section do you gravitate towards?"',
x = 'Section Type',
y = 'Count')
pie <- ggplot(icebreaker, aes(x = fiction, fill = cluster, weight=size)) +
geom_bar(width = 1) + coord_polar(theta="y")
pie
pie <- ggplot(icebreaker, aes(x = fiction, weight=size)) +
geom_bar(width = 1) + coord_polar(theta="y")
pie
pie <- ggplot(icebreaker, aes(x = fiction) +
geom_bar(width = 1) + coord_polar(theta="y")
pie
pie <- ggplot(icebreaker, aes(x = factor(1),fill=factor(fiction)) +
geom_bar(width = 1) + coord_polar(theta="y")
pie
pie <- ggplot(icebreaker, aes(x = factor(1),fill=factor(fiction)) + geom_bar(width = 1) + coord_polar(theta="y")
pie
pie <- ggplot(icebreaker, aes(x = factor(1),fill=factor(fiction)) + geom_bar(width = 1)
pie + coord_polar(theta="y")
pie <- ggplot(icebreaker, aes(x = fiction,fill=factor(fiction)) + geom_bar(width = 1)
pie + coord_polar(theta="y")
pie <- ggplot(icebreaker, aes(x = fiction,fill=factor(fiction)) + geom_bar(width = 1)
pie <- ggplot(icebreaker, aes(x = fiction,fill=factor(fiction))) + geom_bar(width = 1)
pie + coord_polar(theta="y")
pie <- ggplot(icebreaker, aes(x = fiction,fill=factor(fiction))) + geom_bar(width = 1)
pie
pie <- ggplot(icebreaker, aes(x = factor(fiction),fill=factor(fiction))) + geom_bar(width = 1)
pie + coord_polar(theta="y")
pie <- ggplot(icebreaker, aes(x = factor(1),fill=factor(fiction))) + geom_bar(width = 1)
pie + coord_polar(theta="y")
table(icebreaker$fiction)
29/nrow(icebreaker)
nrow(icebreaker)
pie <- ggplot(icebreaker, aes(x = factor(1),fill=factor(fiction))) + geom_bar(width = 1)
pie + coord_polar(theta="y")
labs(title = 'When you go to a bookstore, \n which section do you gravitate towards?',
x = '',
y = '')
pie <- ggplot(icebreaker, aes(x = factor(1),fill=factor(fiction))) + geom_bar(width = 1)
pie + coord_polar(theta="y")+labs(title = 'When you go to a bookstore, \n which section do you gravitate towards?',
x = '',
y = '')
base + geom_histogram(aes(y=..density..)) +
labs(title = 'Histogram answering the question \n "When you go to a bookstore, \n which section do you gravitate towards?"',
x = 'Section Type',
y = 'Count')
base + geom_histogram(aes(y=..count../sum(..count..)) +
labs(title = 'Histogram answering the question \n "When you go to a bookstore, \n which section do you gravitate towards?"',
x = 'Section Type',
y = 'Count')
ds
base + geom_histogram(aes(y=..count../sum(..count..))) +
labs(title = 'Histogram answering the question \n "When you go to a bookstore, \n which section do you gravitate towards?"',
x = 'Section Type',
y = 'Count')
base + geom_histogram(aes(y=..count../sum(..count..))) +
labs(title = 'When you go to a bookstore, \n which section do you gravitate towards?',
x = 'Section Type',
y = 'Count')
base + geom_histogram(aes(y=..count../sum(..count..))) +
labs(title = 'Do you prefer to read fiction or non-fiction?',
x = 'Section Type',
y = 'Count')
pie <- ggplot(icebreaker, aes(x = factor(1),fill=factor(fiction))) + geom_bar(width = 1)
pie + coord_polar(theta="y")+labs(title = 'Do you prefer to read fiction or non-fiction?',
x = '',
y = '')
base + geom_histogram(aes(y=..count../sum(..count..))) +
labs(title = 'Do you prefer to read fiction or non-fiction?',
x = 'Section Type',
y = 'Density')
base + geom_histogram(aes(y=..count../sum(..count..))) +
labs(title = 'Do you prefer to read fiction or non-fiction?',
x = 'Type',
y = 'Density')
# jdblischak at gmail dot com
############################################################
rm(list = ls())
library(ggplot2)
data(mpg)
base1 <- ggplot(data = mpg,
mapping = aes(x = cty, y = hwy,
color = factor(drv)))
# This is supposed to give an error
base1
str(base1)
base2 <- ggplot(data = mpg,
mapping = aes(x = cty, fill = factor(drv)))
str(base2)
b <- base1 + geom_point() +  labs(title = "Fuel economy for highway driving vs \n city driving for cars with different drive trains",
x = 'Fuel economy in the city (mpg)',
y = 'Fuel economy on the highway (mpg)')
b + scale_colour_discrete(
name="Drive Train",
breaks=c("4", "f", "r"),
labels=c("All Wheel", "Front Wheel", "Rear Wheel"))
b
# read in the file of adjectives
sCenterName <- read.table("~/adjectives.txt", header=F, quote="\"")
set.seed(4)
nPossibleCenters <- 372
# Construct names for schools (comes from http://www.fanfiction.net/s/7739576/1/106-Stories-of-Us)
colnames(sCenterName) <- 'Word'
CenterTypeDraw <- cut(runif(nPossibleCenters), breaks = c(0.0, 0.3, 0.5, 0.7, 0.8, 0.9, 1.0), include.lowest = TRUE)
sCenterType <- as.character(factor(CenterTypeDraw, labels = c('Camp','Program','Center','Initiative','Club','House')))
sPossibleCenterName <- paste(sCenterName$Word, sCenterType)
# Randomly select the number centers you want
nCenters <- 20
sCenterName <- sPossibleCenterName[sample(1:nPossibleCenters,nCenters,replace=F)]
View(sCenterName)
setwd("~/after-hours")
setwd("~/after-hours/Stats-Code-and-Sim-Data")
